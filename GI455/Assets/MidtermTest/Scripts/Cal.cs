using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Cal : MonoBehaviour
{
    // Start is called before the first frame update
    void Start()
    {
        Debug.Log("A1 pass : " + TestA1());
        Debug.Log("A2 pass : " + TestA2());
        Debug.Log("A3 pass : " + TestA3());
        Debug.Log("A4 pass : " + TestA4());
        Debug.Log("A5 pass : " + TestA5());
    }

    bool TestA1()
    {
        string data = "5,I,V,w,R,i,3,J,9,3,8,6,7,R,c,v,K,5,1,1,x,L,g,0,4,8,P,5,k,l,B,I,6,D,6,U,U,S,Y,O,l,6,w,w,9,M,i,Y,v,q,U,d,A,b,q,p,f,6,Y,K,5,N,P,P,0,u,C,V,i,b,7,M,8,F,2,4,g,5,j,q,3,8,5,U,0,3,9,b,F,i,V,Y,E,V,T,7,G,1,6,5,B,9,M,T,d,5,F,z,e,Z,G,b,p,M,P,8,m,c,1,Q,X,3,A,h,4,0,4,C,1,7,W,1,9,X,i,G,d,4,o,0,o,X,K,8,Q,w,l,h,D,1,Y,w,Q,T,R,w,G,j,D,v,d,c,5,Y,f,a,o,6,h,5,Y,C,L,1,o,2,x,T,N,1,F,u,0,L,6,D,L,E,k,i,w,r,U,H,Y,T,s,W,y,c,n,e,2,F,N,6,u,s,3,t,A,V,j,1,F,u,v,a,7,9,Z,x,a,g,b,9,6,2,e,K,N,g,Q,4,I,w,L,x,Q,I,5,2,Z,0,m,H,Y,P,P,f,h,6,Y,f,i,y,U,N,0,K,L,2,v,D,w,q,t,V,4,0,x,g,U,E,3,k,Q,D,t,5,n,z,v,l,2,M,a,r,G,C,K,M,p,I,i,N,A,p,8,m,1,G,L,1,p,6,5,L,0,t,L,S,v,8,K,n,7,V,h,Z,E,N,E,1,d,E,l,X,5,F,z,r,b,W,1,q,n,2,U,E,8,V,q,N,0,5,9,e,F,1,7,G,A,w,j,U,G,5,S,I,e,0,O,m,a,n,h,u,b,K,E,4,B,9,r,C,x,2,x,M,X,8,h,J,d,o,d,c,8,q,z,7,g,E,2,X,c,5,9,9,m,C,d,q,t,i,M,4,5,W,i,m,g,9,1,5,E,m,C,1,a,r,7,C,l,t,9,x,d,l,4,9,4,1,2,b,m,P,2,J,s,t,u,y,q,Y,X,a,A,o,s,T,5,B,H,g,z,2,6,K,i,W,T,2,0,7,T,o,J,I,p,j,I,8,i,q,K,P,x,y,4,n,H,6,s,x,7,I,c,3,5,m,u,W,3,t,S,q,W,5,p,k,0,I,r,S,h,I,v,h,M,e,2,O,4,4,E,W,1,Z,u,7,7,b,e,G,h,R,7,M,x,4,9,i,H,a,8,4,y,4,o,7,8,8,5,R,C,1,6,K,w,p,x,W,y,w,v,F,3,0,p,N,0,z,i,8,H,l,e,L,2,2,4,t,0,t,6,7,a,Z,1,K,u,4,9,C,K,c,R,9,1,t,2,C,r,b,1,7,r,b,8,e,D,C,1,r,1,Q,g,Q,g,f,I,T,D,A,m,z,x,n,z,0,8,A,B,7,9,2,W,U,2,b,S,R,T,Q,D,3,2,E,0,3,6,T,K,5,J,k,L,W,O,K,K,b,t,c,Q,F,a,8,3,u,y,2,d,9,i,S,M,1,t,S,m,V,B,Z,m,R,T,j,o,j,N,G,1,H,N,j,X,k,s,s,u,1,4,6,V,E,n,h,h,o,t,y,J,5,5,9,l,8,0,T,i,E,G,r,5,Q,j,9,r,D,x,q,o,O,i,K,G,h,J,0,A,9,S,8,W,m,j,4,5,0,E,7,M,V,c,p,i,B,R,n,9,b,6,0,z,L,K,0,2,p,s,W,O,9,C,4,l,V,9,2,t,5,5,n,N,H,Z,V,l,j,d,l,N,k,0,U,l,d,H,g,0,7,4,2,0,9,U,u,b,v,p,Y,1,0,5,1,6,v,6,5,6,7,B,G,D,9,A,p,9,6,B,5,P,k,K,T,u,6,t,6,D,v,9,Q,Q,t,o,l,P,u,I,p,P,9,r,0,E,A,N,2,G,0,F,0,Y,7,E,4,P,j,4,b,u,J,5,5,x,r,7,c,A,X,p,I,J,j,5,0,H,8,N,M,2,R,J,M,k,m,b,I,2,F,3,o,l,J,q,c,9,7,E,i,k,i,T,y,5,8,c,o,r,s,h,n,O,n,N,9,9,1,f,t,J,G,u,1,p,i,c,7,Y,1,7,3,1,w,6,X,0,5,s,v,v,3,p,2,G,f,c,Z,B,y,8,s,6,V,L,4,M,o,C,9,5,S,8,N,i,q,U,R,p,c,x,O,N,O,1,P,W,J,m,Q,C,U,2,8,W,u,T,i,g,b,f,5,F,l,6,D";
        string answer = "D,6,l,F,5,f,b,g,i,T,u,W,8,2,U,C,Q,m,J,W,P,1,O,N,O,x,c,p,R,U,q,i,N,8,S,5,9,C,o,M,4,L,V,6,s,8,y,B,Z,c,f,G,2,p,3,v,v,s,5,0,X,6,w,1,3,7,1,Y,7,c,i,p,1,u,G,J,t,f,1,9,9,N,n,O,n,h,s,r,o,c,8,5,y,T,i,k,i,E,7,9,c,q,J,l,o,3,F,2,I,b,m,k,M,J,R,2,M,N,8,H,0,5,j,J,I,p,X,A,c,7,r,x,5,5,J,u,b,4,j,P,4,E,7,Y,0,F,0,G,2,N,A,E,0,r,9,P,p,I,u,P,l,o,t,Q,Q,9,v,D,6,t,6,u,T,K,k,P,5,B,6,9,p,A,9,D,G,B,7,6,5,6,v,6,1,5,0,1,Y,p,v,b,u,U,9,0,2,4,7,0,g,H,d,l,U,0,k,N,l,d,j,l,V,Z,H,N,n,5,5,t,2,9,V,l,4,C,9,O,W,s,p,2,0,K,L,z,0,6,b,9,n,R,B,i,p,c,V,M,7,E,0,5,4,j,m,W,8,S,9,A,0,J,h,G,K,i,O,o,q,x,D,r,9,j,Q,5,r,G,E,i,T,0,8,l,9,5,5,J,y,t,o,h,h,n,E,V,6,4,1,u,s,s,k,X,j,N,H,1,G,N,j,o,j,T,R,m,Z,B,V,m,S,t,1,M,S,i,9,d,2,y,u,3,8,a,F,Q,c,t,b,K,K,O,W,L,k,J,5,K,T,6,3,0,E,2,3,D,Q,T,R,S,b,2,U,W,2,9,7,B,A,8,0,z,n,x,z,m,A,D,T,I,f,g,Q,g,Q,1,r,1,C,D,e,8,b,r,7,1,b,r,C,2,t,1,9,R,c,K,C,9,4,u,K,1,Z,a,7,6,t,0,t,4,2,2,L,e,l,H,8,i,z,0,N,p,0,3,F,v,w,y,W,x,p,w,K,6,1,C,R,5,8,8,7,o,4,y,4,8,a,H,i,9,4,x,M,7,R,h,G,e,b,7,7,u,Z,1,W,E,4,4,O,2,e,M,h,v,I,h,S,r,I,0,k,p,5,W,q,S,t,3,W,u,m,5,3,c,I,7,x,s,6,H,n,4,y,x,P,K,q,i,8,I,j,p,I,J,o,T,7,0,2,T,W,i,K,6,2,z,g,H,B,5,T,s,o,A,a,X,Y,q,y,u,t,s,J,2,P,m,b,2,1,4,9,4,l,d,x,9,t,l,C,7,r,a,1,C,m,E,5,1,9,g,m,i,W,5,4,M,i,t,q,d,C,m,9,9,5,c,X,2,E,g,7,z,q,8,c,d,o,d,J,h,8,X,M,x,2,x,C,r,9,B,4,E,K,b,u,h,n,a,m,O,0,e,I,S,5,G,U,j,w,A,G,7,1,F,e,9,5,0,N,q,V,8,E,U,2,n,q,1,W,b,r,z,F,5,X,l,E,d,1,E,N,E,Z,h,V,7,n,K,8,v,S,L,t,0,L,5,6,p,1,L,G,1,m,8,p,A,N,i,I,p,M,K,C,G,r,a,M,2,l,v,z,n,5,t,D,Q,k,3,E,U,g,x,0,4,V,t,q,w,D,v,2,L,K,0,N,U,y,i,f,Y,6,h,f,P,P,Y,H,m,0,Z,2,5,I,Q,x,L,w,I,4,Q,g,N,K,e,2,6,9,b,g,a,x,Z,9,7,a,v,u,F,1,j,V,A,t,3,s,u,6,N,F,2,e,n,c,y,W,s,T,Y,H,U,r,w,i,k,E,L,D,6,L,0,u,F,1,N,T,x,2,o,1,L,C,Y,5,h,6,o,a,f,Y,5,c,d,v,D,j,G,w,R,T,Q,w,Y,1,D,h,l,w,Q,8,K,X,o,0,o,4,d,G,i,X,9,1,W,7,1,C,4,0,4,h,A,3,X,Q,1,c,m,8,P,M,p,b,G,Z,e,z,F,5,d,T,M,9,B,5,6,1,G,7,T,V,E,Y,V,i,F,b,9,3,0,U,5,8,3,q,j,5,g,4,2,F,8,M,7,b,i,V,C,u,0,P,P,N,5,K,Y,6,f,p,q,b,A,d,U,q,v,Y,i,M,9,w,w,6,l,O,Y,S,U,U,6,D,6,I,B,l,k,5,P,8,4,0,g,L,x,1,1,5,K,v,c,R,7,6,8,3,9,J,3,i,R,w,V,I,5";
        string sum = "";

        string[] split = data.Split(',');
        for(int i = split.Length - 1; i >= 0; i--)
        {
            if(sum == "")
            {
                sum += split[i];
            }
            else
            {
                sum += "," + split[i];
            }
        }


        return answer == sum;
    }

    bool TestA2()
    {
        string data = "t,F,R,s,D,7,f,6,4,9,g,5,h,3,5,e,Q,6,n,U,J,d,1,s,O,3,j,e,i,z,s,a,3,1,m,K,7,m,K,U,E,1,a,u,6,o,F,M,8,V,h,D,F,X,w,I,9,2,2,K,i,G,5,J,4,L,8,9,u,C,8,L,N,e,m,I,t,3,E,M,Z,X,0,1,z,u,M,N,9,P,X,m,l,3,K,r,I,m,p,I,y,V,Z,f,y,R,0,D,m,z,0,k,q,V,5,g,z,H,9,R,Q,l,I,c,8,e,4,l,i,3,G,z,8,G,X,J,e,d,E,Y,m,p,h,w,7,Y,H,p,9,0,s,A,7,V,2,g,k,8,V,8,I,A,n,N,A,4,o,2,E,U,R,4,B,J,n,7,t,7,e,c,7,I,k,W,M,4,T,p,3,P,6,e,4,a,g,4,3,E,f,6,C,Q,7,a,j,T,U,u,S,M,q,Q,L,d,U,l,R,h,H,M,9,w,o,O,M,Z,z,T,h,s,v,L,S,D,F,S,5,u,e,I,e,4,n,H,v,p,t,j,U,p,f,2,6,a,d,H,t,5,N,L,4,3,O,B,3,O,x,Y,9,n,b,P,i,T,3,0,w,P,o,C,k,F,i,8,O,Z,0,S,2,r,u,1,3,g,Y,I,b,I,D,5,A,v,v,u,H,p,9,p,i,E,B,w,w,e,D,0,U,I,M,2,5,M,5,d,9,Y,h,4,s,r,Y,7,e,j,2,x,I,3,o,7,f,C,d,1,d,l,f,I,4,3,6,8,7,s,9,3,V,M,k,k,P,k,8,P,D,o,Y,f,B,X,6,1,z,o,S,L,r,W,K,Z,q,Y,E,S,8,g,0,X,T,I,Z,2,l,X,6,x,J,o,7,P,N,L,k,F,W,i,8,S,1,9,t,2,B,s,e,P,8,v,U,8,c,t,y,5,q,2,8,4,P,W,G,9,g,K,P,u,t,3,R,p,g,X,N,p,5,e,7,h,Z,g,E,X,I,O,q,I,D,K,4,H,G,C,d,y,8,8,G,b,U,c,1,4,Q,J,L,H,o,P,F,D,z,X,O,9,0,l,5,N,v,b,D,7,2,S,4,X,z,P,Y,N,1,s,H,U,6,3,7,Y,x,H,q,C,4,T,Z,h,I,e,w,1,c,R,2,d,2,l,P,0,h,o,2,e,k,8,f,s,a,F,6,u,8,8,w,p,8,v,w,V,w,d,j,E,4,H,6,m,u,2,G,D,u,M,H,U,6,7,8,a,7,b,T,C,T,R,Y,R,L,g,5,L,F,g,z,L,p,U,V,2,7,d,8,Y,Y,M,L,A,h,V,f,k,Z,E,Y,D,0,D,C,P,s,Y,h,8,6,8,9,E,9,Q,9,W,t,9,p,O,A,C,R,l,M,H,W,S,t,S,1,e,I,R,9,N,b,q,3,X,K,e,r,g,Z,q,M,n,V,v,7,k,D,k,D,5,a,l,C,0,b,4,q,j,I,W,K,X,d,W,3,4,q,y,d,j,U,P,v,m,2,U,e,P,0,l,M,5,4,R,A,F,n,V,z,j,y,u,Z,R,3,T,I,5,H,M,1,v,Q,y,E,y,b,s,A,a,i,Z,2,g,t,0,p,8,3,6,8,n,3,9,6,E,j,1,w,p,p,y,2,a,4,C,F,F,k,U,y,P,8,9,8,q,T,e,j,4,R,S,g,5,8,p,g,g,m,R,u,1,e,8,r,U,f,z,I,8,5,x,L,W,w,6,Q,B,3,d,S,9,d,1,9,u,C,c,F,T,9,s,g,x,t,4,R,b,E,x,G,H,0,0,T,j,7,h,0,B,o,4,0,f,H,t,y,0,w,2,Y,b,M,l,O,n,f,t,o,u,v,5,l,k,9,r,6,E,X,x,F,e,V,K,S,s,u,O,K,1,n,r,l,s,2,S,4,D,h,K,J,4,M,0,S,K,K,Z,k,Z,P,5,r,3,d,l,t,8,a,8,9,5,8,E,r,2,a,p,V,Q,4,o,L,x,V,F,2,u,f,P,X,n,c,3,C,4,4,F,X,8,8,S,L,3,X,7,U,9,5,d,f,Z,7,D,k,0,j,5,C,C,2,v,j,3,a,f,I,8,B,8,H,R,R,p,0,V,K,q,d,Z,6,L,L,J,d,R,8,9,q,v,0,R,3,h,p,j,E,b,b,d,Q,1,0,t,4,j,4,0,b,c,P,e,9,0,3,3,f,J,8,r";
        string answer = "F,s,7,6,9,5,3,e,6,U,d,s,3,e,z,a,1,K,m,U,1,u,o,M,V,D,X,I,2,K,G,J,L,9,C,L,e,I,3,M,X,1,u,N,P,m,3,r,m,I,V,f,R,D,z,k,V,g,H,R,l,c,e,l,3,z,G,J,d,Y,p,w,Y,p,0,A,V,g,8,8,A,N,4,2,U,4,J,7,7,c,I,W,4,p,P,e,a,4,E,6,Q,a,T,u,M,Q,d,l,h,M,w,O,Z,T,s,L,D,S,u,I,4,H,p,j,p,2,a,H,5,L,3,B,O,Y,n,P,T,0,P,C,F,8,Z,S,r,1,g,I,I,5,v,u,p,p,E,w,e,0,I,2,M,d,Y,4,r,7,j,x,3,7,C,1,l,I,3,8,s,3,M,k,k,P,o,f,X,1,o,L,W,Z,Y,S,g,X,I,2,X,x,o,P,L,F,i,S,9,2,s,P,v,8,t,5,2,4,W,9,K,u,3,p,X,p,e,h,g,X,O,I,K,H,C,y,8,b,c,4,J,H,P,D,X,9,l,N,b,7,S,X,P,N,s,U,3,Y,H,C,T,h,e,1,R,d,l,0,o,e,8,s,F,u,8,p,v,V,d,E,H,m,2,D,M,U,7,a,b,C,R,R,g,L,g,L,U,2,d,Y,M,A,V,k,E,D,D,P,Y,8,8,E,Q,W,9,O,C,l,H,S,S,e,R,N,q,X,e,g,q,n,v,k,k,5,l,0,4,j,W,X,W,4,y,j,P,m,U,P,l,5,R,F,V,j,u,R,T,5,M,v,y,y,s,a,Z,g,0,8,6,n,9,E,1,p,y,a,C,F,U,P,9,q,e,4,S,5,p,g,R,1,8,U,z,8,x,W,6,B,d,9,1,u,c,T,s,x,4,b,x,H,0,j,h,B,4,f,t,0,2,b,l,n,t,u,5,k,r,E,x,e,K,s,O,1,r,s,S,D,K,4,0,K,Z,Z,5,3,l,8,8,5,E,2,p,Q,o,x,F,u,P,n,3,4,F,8,S,3,7,9,d,Z,D,0,5,C,v,3,f,8,8,R,p,V,q,Z,L,J,R,9,v,R,h,j,b,d,1,t,j,0,c,e,0,3,J,r";
        string sum = "";

        string[] split = data.Split(',');
        for(int i = 0; i < split.Length; i++)
        {
            bool isEven = i % 2 == 0;

            if(!isEven)
            {
                if(sum == "")
                {
                    sum += split[i];
                }
                else
                {
                    sum += "," + split[i];
                }
            }
        }

        return answer == sum;
    }

    bool TestA3()
    {
        string data = "747,345,950,606,688,258,951,462,801,421,960,636,322,449,975,901,304,293,748,682,382,504,240,470,185,998,395,19,77,837,287,895,914,165,891,632,398,618,674,372,200,256,452,86,120,434,259,707,557,865,186,910,268,867,252,173,665,932,116,83,305,146,778,198,290,966,947,85,213,437,435,303,774,698,597,372,644,274,448,748,586,502,699,384,485,389,76,368,251,782,678,907,78,911,97,99,272,61,345,166,377,44,226,492,899,580,475,311,26,488,207,928,789,137,765,215,256,340,605,150,778,924,317,333,441,795,376,617,571,767,418,198,227,490,956,737,377,926,877,785,115,461,616,485,245,671,709,581,847,186,985,350,623,808,154,612,64,1,131,557,242,929,672,335,937,91,783,686,339,991,282,404,66,754,148,280,275,986,763,692,653,405,696,776,574,532,26,312,942,996,570,216,659,391,238,543,829,439,417,463,181,814,479,552,468,236,903,44,597,166,713,859,506,586,679,934,523,325,380,857,387,870,990,89,997,635,272,773,727,65,972,904,955,194,415,47,799,657,162,544,993,94,552,424,791,513,355,947,931,519,155,284,410,420,817,751,412,208,935,787,991,384,546,491,954,232,693,437,157,966,20,725,150,671,604,552,163,565,571,587,970,872,81,30,900,704,879,331,963,477,312,983,146,786,107,993,251,960,918,387,311,65,539,709,528,287,11,875,29,935,453,618,939,977,592,282,308,345,706,744,747,165,66,259,452,876,88,216,478,506,473,992,432,510,726,100,626,788,40,576,561,600,422,960,142,610,889,713,655,192,825,350,496,90,32,742,684,975,64,702,984,13,946,907,547,104,606,44,940,745,727,808,348,573,418,530,679,432,858,887,767,948,192,912,282,989,232,280,276,691,48,862,835,397,142,664,953,567,169,94,205,499,338,332,211,14,536,754,1,649,210,625,678,122,657,614,666,15,880,948,919,353,899,426,916,903,222,757,531,856,531,759,292,111,947,126,631,153,492,152,557,878,941,246,404,528,493,633,154,958,671,949,11,120,534,51,73,291,518,463,659,218,24,212,812,934,233,718,102,399,899,646,790,99,849,100,347,681,93,801,870,147,540,271,703,498,738,575,54,678,924,479,662,419,502,680,408,134,346,390,765,291,768,141,72,478,863,83,685,810,553,976,774,39,910,489,141,45,304,463,841,460,551,484,545,248,593,940,900,310,240,254,299,417,76,340,330,553,217,509,279,997,104,821,896,43,131,417,492,293,653,194,424,477,624,148,647,205,369,368,491,498,287,875,350,697,291,320,109,773,257,390,317,382,953,3,256,156,326,677,517,20,574,794,996,937,350,313,71,243,445,672,496,312,247,874,2,354,594,545,587,234,952,91,286,767,470,803,769,368,186,437,245,764,151,33,816,608,324,234,76,602,91,252,464,838,157,313,123,690,314,590,204,118,384,889,861,149,510,660,296,273,433,911,879,950,218,897,876,431,722,399,737,33,215,210,1,906,646,337,139,116,990,919,886,933,265,675,967,464,181,33,378,761,599,737,399,70,134,713,396,507,961,315,43,764,161,807,776,90,767,767,286,298,850,761,748,567,65,276,838,412,717,139,860,170,47,585,204,774,86,278,407,259,818,694,311,985,671,656,121,261,311,764,759,690,761,206,245,782,384,54,344,623,46,653,686,157,623,753,652,861,264,405,422,682,827,464,579,10,619,141,583,303,344,213,39,495,877,992,119,931,718,995,649,190,134,336,649,131,463,178,240,708,766,875,15,42,755,26,910,123,308,162,805,197,731,773,836,971,617,757,515,456,581,937,888,742,478,190,635,388,354,250,197,190,584,465,500,46,909,712,368,934,246,581,571,714,68,722,976,355,221,622,658,945,698,821,872,362,429,527,980,982,424,838,730,699,258,254,543,680,64,45,970,272,928,234,579,731,811,806,243,529,418,201,198,207,875,928,98,467,22,819,759,907,934,892,170,479,328,372,318,155,377,988,453,964,55,757,520,569,204,954,457,243,980,650,632,436,623,676,589,761,547,286,15,36,695,310,610,808,824,522,347,106,944,385,882,265,801,928,963,89,295,559,157,690,48,831,481,880,802,42,162,315,425,331,836,509,683,354,744,438,42,665,932,132,809,25,246,645,670,814,410,815,408,786,395,732,917,217,349,921,260,824,460,431,460,151,360,949,129,557,492,76,719,791,991,457,737,676,140,245,720,705,753,607,941,927,841,145,394,958,29,993,413,14,720,174,780,347,775,924,855,639,470,758,860,410";
        string answer = "508093";
        int sum = 0;
        string[] split = data.Split(',');

        for(int i = 0; i < split.Length; i++)
        {
            sum += int.Parse(split[i]);
        }

        return answer == sum.ToString();
    }

    bool TestA4()
    {
        string data = "D,7,%,k,C,w,4,D,V,Y,S,%,8,&,R,g,@,k,T,T,0,E,6,5,#,t,1,6,7,N,1,R,$,7,&,6,#,&,N,G,8,5,X,F,c,J,a,r,e,2,P,%,8,#,%,&,l,y,w,0,&,I,H,n,a,9,2,H,D,b,9,&,@,n,O,$,2,$,o,5,o,8,0,9,K,0,M,9,N,2,R,U,W,c,f,n,S,E,I,#,q,P,4,F,4,6,D,3,P,8,%,0,O,m,2,#,4,f,D,@,@,$,n,e,d,d,F,q,9,@,l,&,Z,O,v,q,d,7,9,1,F,#,%,v,3,c,7,g,5,M,3,#,5,1,x,6,D,G,$,&,$,z,1,o,3,f,j,1,a,h,&,y,5,W,w,k,q,0,Y,r,I,s,$,C,u,2,7,3,7,@,s,5,2,7,b,4,#,v,S,p,q,I,7,1,U,i,Q,@,o,%,R,9,u,5,%,x,A,W,O,L,h,#,M,9,#,W,5,3,5,q,4,C,q,&,&,c,o,$,v,F,&,V,E,y,h,R,n,g,z,F,Y,r,n,#,N,h,#,M,0,Y,7,9,b,V,g,Z,l,#,n,J,0,n,6,n,$,C,R,0,C,s,2,@,v,x,d,8,v,E,D,7,W,&,4,F,Y,v,7,9,o,@,#,d,F,Z,a,$,a,7,9,N,#,@,T,k,J,7,j,h,N,4,@,M,L,%,o,y,J,U,0,Q,T,0,3,Q,m,o,m,@,s,t,2,8,F,J,o,5,6,e,&,%,J,l,T,$,j,5,X,D,#,6,b,L,6,#,d,1,j,B,K,5,L,q,I,f,K,M,H,@,#,b,$,d,s,K,I,0,P,%,U,8,4,o,#,v,%,&,r,n,X,4,d,0,h,u,W,&,Z,f,U,5,4,&,B,v,k,3,Q,O,#,y,R,2,a,B,s,6,&,N,k,R,0,1,I,c,@,c,Y,@,b,7,@,A,9,4,#,Y,@,$,g,@,%,8,#,s,m,#,J,K,@,W,L,K,A,z,4,d,o,#,C,u,1,T,6,9,5,w,#,0,@,6,D,3,S,#,$,Y,2,p,Q,J,9,g,6,V,B,k,a,9,5,T,r,T,&,6,Y,2,l,6,u,Y,h,8,m,e,P,6,%,0,7,L,W,2,j,R,V,h,8,G,#,N,f,A,b,W,%,s,t,7,f,w,e,9,$,h,8,c,x,7,&,Z,F,M,%,h,7,J,9,g,%,@,H,@,V,W,%,#,1,G,$,g,M,M,h,C,@,x,v,A,h,s,W,5,%,n,n,4,F,$,@,%,&,E,#,8,%,v,4,C,8,7,g,R,c,%,9,#,E,L,j,4,t,G,@,%,W,h,8,b,o,l,D,V,I,n,1,f,l,7,b,h,#,8,w,O,8,9,$,3,&,y,u,8,%,1,U,G,d,p,m,c,w,C,y,6,X,#,c,5,h,%,I,k,L,V,p,u,@,y,o,T,#,m,#,9,M,I,@,K,q,C,I,L,A,p,9,9,X,p,%,%,k,$,0,I,$,f,A,T,D,W,%,#,f,#,#,b,E,j,3,&,4,6,H,w,h,l,5,D,#,7,5,h,h,0,F,L,J,&,i,R,T,6,f,J,4,s,j,j,s,J,&,P,F,@,a,R,n,w,#,1,J,4,A,Z,I,0,6,1,t,4,#,B,1,%,f,u,%,V,F,P,@,h,2,N,4,q,@,5,%,$,%,3,4,X,y,a,3,O,m,9,R,L,j,5,T,i,e,%,u,7,l,$,h,6,%,0,S,C,0,i,e,%,A,5,6,&,r,z,#,1,f,P,@,B,#,J,1,&,R,0,9,w,e,9,q,6,g,0,k,1,6,#,@,v,A,1,%,$,5,k,U,s,g,T,6,6,q,@,&,K,#,6,V,L,x,O,F,#,&,X,x,1,3,J,T,k,S,@,L,s,D,&,b,2,y,6,&,y,j,4,U,t,0,8,5,d,t,H,m,8,2,N,&,l,H,9,&,2,x,S,8,0,9,G,3,b,A,%,1,U,b,9,1,a,H,1,@,$,%,N,t,@,X,h,j,y,W,G,e,8,1,K,1,o,M,d,G,x,y,o,A,#,@,m,S,1,2,Z,j,X,u,@,o,V,1,F,2,%,@,w,%,l,d,%,u,M,K,a,2,A,K,4,j,B,0,@,&,R,k,q,%,8,O,g,&,g,x,7,1,O";
        string answer = "D,7,k,C,w,4,D,V,Y,S,8,R,g,k,T,T,0,E,6,5,t,1,6,7,N,1,R,7,6,N,G,8,5,X,F,c,J,a,r,e,2,P,8,l,y,w,0,I,H,n,a,9,2,H,D,b,9,n,O,2,o,5,o,8,0,9,K,0,M,9,N,2,R,U,W,c,f,n,S,E,I,q,P,4,F,4,6,D,3,P,8,0,O,m,2,4,f,D,n,e,d,d,F,q,9,l,Z,O,v,q,d,7,9,1,F,v,3,c,7,g,5,M,3,5,1,x,6,D,G,z,1,o,3,f,j,1,a,h,y,5,W,w,k,q,0,Y,r,I,s,C,u,2,7,3,7,s,5,2,7,b,4,v,S,p,q,I,7,1,U,i,Q,o,R,9,u,5,x,A,W,O,L,h,M,9,W,5,3,5,q,4,C,q,c,o,v,F,V,E,y,h,R,n,g,z,F,Y,r,n,N,h,M,0,Y,7,9,b,V,g,Z,l,n,J,0,n,6,n,C,R,0,C,s,2,v,x,d,8,v,E,D,7,W,4,F,Y,v,7,9,o,d,F,Z,a,a,7,9,N,T,k,J,7,j,h,N,4,M,L,o,y,J,U,0,Q,T,0,3,Q,m,o,m,s,t,2,8,F,J,o,5,6,e,J,l,T,j,5,X,D,6,b,L,6,d,1,j,B,K,5,L,q,I,f,K,M,H,b,d,s,K,I,0,P,U,8,4,o,v,r,n,X,4,d,0,h,u,W,Z,f,U,5,4,B,v,k,3,Q,O,y,R,2,a,B,s,6,N,k,R,0,1,I,c,c,Y,b,7,A,9,4,Y,g,8,s,m,J,K,W,L,K,A,z,4,d,o,C,u,1,T,6,9,5,w,0,6,D,3,S,Y,2,p,Q,J,9,g,6,V,B,k,a,9,5,T,r,T,6,Y,2,l,6,u,Y,h,8,m,e,P,6,0,7,L,W,2,j,R,V,h,8,G,N,f,A,b,W,s,t,7,f,w,e,9,h,8,c,x,7,Z,F,M,h,7,J,9,g,H,V,W,1,G,g,M,M,h,C,x,v,A,h,s,W,5,n,n,4,F,E,8,v,4,C,8,7,g,R,c,9,E,L,j,4,t,G,W,h,8,b,o,l,D,V,I,n,1,f,l,7,b,h,8,w,O,8,9,3,y,u,8,1,U,G,d,p,m,c,w,C,y,6,X,c,5,h,I,k,L,V,p,u,y,o,T,m,9,M,I,K,q,C,I,L,A,p,9,9,X,p,k,0,I,f,A,T,D,W,f,b,E,j,3,4,6,H,w,h,l,5,D,7,5,h,h,0,F,L,J,i,R,T,6,f,J,4,s,j,j,s,J,P,F,a,R,n,w,1,J,4,A,Z,I,0,6,1,t,4,B,1,f,u,V,F,P,h,2,N,4,q,5,3,4,X,y,a,3,O,m,9,R,L,j,5,T,i,e,u,7,l,h,6,0,S,C,0,i,e,A,5,6,r,z,1,f,P,B,J,1,R,0,9,w,e,9,q,6,g,0,k,1,6,v,A,1,5,k,U,s,g,T,6,6,q,K,6,V,L,x,O,F,X,x,1,3,J,T,k,S,L,s,D,b,2,y,6,y,j,4,U,t,0,8,5,d,t,H,m,8,2,N,l,H,9,2,x,S,8,0,9,G,3,b,A,1,U,b,9,1,a,H,1,N,t,X,h,j,y,W,G,e,8,1,K,1,o,M,d,G,x,y,o,A,m,S,1,2,Z,j,X,u,o,V,1,F,2,w,l,d,u,M,K,a,2,A,K,4,j,B,0,R,k,q,8,O,g,g,x,7,1,O";
        string sum = "";
        string[] split = data.Split(',');

        for(int i = 0; i < split.Length; i++)
        {
            string _str = split[i];

            if(_str != "@" && _str != "#" && _str != "$" && _str != "%" && _str != "&")
            {
                if(sum == "")
                {
                    sum += _str;
                }
                else
                {
                    sum += "," + _str;
                }
            }
        }

        return answer == sum;
    }

    bool TestA5()
    {
        string data = "497,299,434,360,23,809,582,34,65,367,787,353,859,734,511,780,586,801,193,222,531,515,99,688,904,269,805,945,921,913,918,441,822,450,694,352,822,518,739,743,449,70,461,97,31,44,568,1,480,139,462,57,276,275,724,766,951,25,231,640,810,867,637,261,171,4,357,709,533,438,5,877,51,877,312,727,194,762,486,693,32,843,321,463,807,740,602,909,24,338,374,657,742,244,235,147,68,117,44,498,48,492,516,558,11,692,122,181,83,871,756,793,834,662,556,665,672,857,309,935,331,682,142,460,24,587,932,1,334,513,286,634,228,408,18,330,425,118,509,493,625,287,150,672,511,761,934,433,933,320,706,229,859,565,931,588,704,168,896,399,470,663,801,2,79,799,143,99,634,105,142,330,516,182,679,295,9,492,306,229,27,79,61,289,143,82,219,614,749,872,53,762,685,707,759,647,69,253,843,760,885,641,508,871,912,744,868,566,714,359,449,199,91,492,230,727,670,82,270,145,535,402,816,355,696,351,967,868,818,988,132,453,280,28,471,664,623,197,861,278,466,261,39,519,520,823,205,425,320,873,464,39,299,135,803,194,471,209,501,124,445,714,682,137,109,27,473,608,228,88,191,297,130,10,508,142,617,204,258,294,675,477,628,215,418,435,383,199,485,342,180,588,385,887,135,644,420,718,754,560,872,894,146,666,225,153,778,599,299,579,647,468,79,959,334,759,465,560,861,198,975,779,310,558,732,42,335,640,759,875,712,286,552,916,989,451,869,573,383,149,318,263,798,313,687,103,374,842,396,72,205,653,922,16,290,829,652,848,126,421,661,535,659,835,645,303,331,183,170,721,400,845,377,907,951,532,513,161,139,240,342,122,646,585,179,247,741,285,63,419,205,626,752,659,31,624,775,245,875,330,518,612,976,83,124,116,789,672,114,310,454,840,424,179,344,222,805,974,942,842,397,528,673,465,276,154,808,432,736,158,450,746,247,893,215,475,922,255,848,810,751,910,633,530,176,450,972,267,750,210,479,508,933,861,384,614,149,902,459,116,450,593,954,943,923,321,697,420,263,463,856,632,358,525,563,248,313,209,652,658,990,945,984,930,592,350,472,756,601,735,366,252,101,923,259,462,558,25,217,357,8,726,178,160,669,845,877,893,339,491,61,630,928,253,754,820,523,774,72,777,208,83,862,8,991,355,621,598,969,773,214,229,676,383,669,759,57,288,142,57,75,597,107,809,872,559,569,83,318,154,97,457,174,184,187,859,144,608,913,935,648,318,716,421,268,40,107,646,755,580,306,193,976,882,454,758,409,475,335,532,744,137,378,927,29,344,361,427,176,315,130,446,997,974,725,411,635,269,955,90,2,814,746,25,1,423,884,539,740,408,928,292,654,9,775,927,565,85,320,51,441,328,983,679,501,918,220,554,992,695,795,621,865,606,587,537,60,561,689,494,355,561,121,344,78,188,656,916,521,844,937,900,297,532,358,876,214,973,226,334,579,511,823,373,93,934,470,95,809,919,250,147,36,31,180,754,365,156,989,893,966,662,462,286,663,853,50,124,696,300,832,971,604,188,370,804,755,361,858,662,32,522,799,703,935,743,980,426,866,88,382,7,634,850,157,196,26,862,760,546,925,577,57,538,497,181,249,952,244,901,621,460,213,464,765,258,884,643,655,209,284,656,574,405,545,482,214,798,309,668,600,44,145,944,361,51,198,139,271,583,288,383,733,740,825,80,89,437,315,361,80,938,625,131,168,884,904,350,591,459,623,719,460,451,401,25,912,626,737,235,893,731,869,766,14,100,383,750,600,213,217,722,245,791,137,385,219,337,935,447,892,906,968,543,624,343,813,711,565,851,830,107,642,291,933,104,317,696,640,72,436,209,995,323,681,207,324,676,907,665,968,808,958,934,595,739,357,510,708,58,375,112,655,779,992,925,133,668,991,537,152,978,493,430,848,360,229,332,109,950,446,303,308,699,933,425,822,367,35,194,896,194,890,639,674,830,169,510,727,541,870,16,148,518,670,676,965,108,104,717,3,414,207,591,472,595,804,406,48,948,204,209,652,764,683,119,663,450,299,25,833,759,754,74,996,489,40,805,986,995,547,188,449,617,782,854,61,935,779,360,912,701,23,941,272,905,20,68,972,333,896,437,80,121,795,65,403,84,359,308,95,605,67,138,285,289,40,759,592,292,629,946,484,192,691,256,33,253,864,275,667,325,909,254,249,132,656,753,806,115,535,182,276,195,50,569,39,943,930,35";
        int answer = 9498;
        string[] split = data.Split(',');

        int sum = 0;
        for (int i = 0; i < split.Length; i++)
        {
            bool isEven = i % 2 == 0;

            if (isEven)
            {
                sum += int.Parse(split[i]);
            }
            else
            {
                sum -= int.Parse(split[i]);
            }
        }

        return answer == sum;
    }
}
